---
// Obtener la ruta actual para resaltar el enlace activo
const currentPath = Astro.url.pathname;

const navItems = [
  { name: 'Inicio', href: '/', icon: 'home' },
  { name: 'Slots', href: '/slots', icon: 'dices' },
  { name: 'Loterías', href: '/lottery', icon: 'ticket' },
  { name: 'Deportes', href: '/sports', icon: 'trophy' },
  { name: 'Ruleta', href: '/roulette', icon: 'circle' },
  { name: 'El Camino', href: '/the-way', icon: 'map', highlight: true }
];
---

<header class="sticky top-0 z-50 w-full bg-white/90 backdrop-blur-md border-b border-gray-200">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between h-16">
      
      <!-- Logo -->
      <a href="/" class="flex items-center space-x-3 group">
        <div class="flex items-center justify-center w-10 h-10 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-full group-hover:scale-110 transition-transform duration-200">
          <svg 
            xmlns="http://www.w3.org/2000/svg" 
            class="w-6 h-6 text-white" 
            fill="none" 
            viewBox="0 0 24 24" 
            stroke="currentColor"
          >
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5" />
          </svg>
        </div>
        <span class="text-xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent">
          Unmasking
        </span>
      </a>

      <!-- Navegación principal - Desktop -->
      <nav class="hidden md:flex items-center space-x-8">
        {navItems.map((item) => (
          <a 
            href={item.href}
            class={`
              flex items-center space-x-2 px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200
              ${currentPath === item.href 
                ? 'bg-indigo-50 text-indigo-600' 
                : 'text-gray-600 hover:text-indigo-600 hover:bg-indigo-50'
              }
              ${item.highlight ? 'bg-gradient-to-r from-yellow-400 to-orange-500 text-white hover:from-yellow-500 hover:to-orange-600 shadow-md' : ''}
            `}
          >
            <span>{item.name}</span>
            {item.highlight && (
              <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M12 5l7 7-7 7" />
              </svg>
            )}
          </a>
        ))}
      </nav>

      <!-- CTA Button -->
      <div class="hidden md:flex items-center space-x-4">
        <a 
          href="/ayuda"
          class="inline-flex items-center px-4 py-2 bg-red-500 hover:bg-red-600 text-white font-medium rounded-lg transition-colors duration-200"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
          </svg>
          ¿Necesitas ayuda?
        </a>
      </div>

      <!-- Mobile menu button -->
      <button 
        id="mobile-menu-button"
        class="md:hidden flex items-center justify-center w-10 h-10 rounded-lg hover:bg-gray-100 transition-colors duration-200"
        aria-label="Abrir menú de navegación"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>

    <!-- Mobile menu -->
    <div id="mobile-menu" class="md:hidden hidden pb-4">
      <nav class="flex flex-col space-y-2">
        {navItems.map((item) => (
          <a 
            href={item.href}
            class={`
              flex items-center justify-between px-4 py-3 rounded-lg text-sm font-medium transition-all duration-200
              ${currentPath === item.href 
                ? 'bg-indigo-50 text-indigo-600' 
                : 'text-gray-600 hover:text-indigo-600 hover:bg-indigo-50'
              }
              ${item.highlight ? 'bg-gradient-to-r from-yellow-400 to-orange-500 text-white' : ''}
            `}
          >
            <span>{item.name}</span>
            {item.highlight && (
              <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M12 5l7 7-7 7" />
              </svg>
            )}
          </a>
        ))}
        <div class="pt-4 border-t border-gray-200">
          <a 
            href="/ayuda"
            class="flex items-center justify-center w-full px-4 py-3 bg-red-500 hover:bg-red-600 text-white font-medium rounded-lg transition-colors duration-200"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
            </svg>
            ¿Necesitas ayuda?
          </a>
        </div>
      </nav>
    </div>
  </div>
</header>

<script>
  // Toggle mobile menu
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('mobile-menu-button');
    const menu = document.getElementById('mobile-menu');
    
    if (button && menu) {
      button.addEventListener('click', () => {
        menu.classList.toggle('hidden');
      });
    }
  });
</script>